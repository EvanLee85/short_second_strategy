# ==============================================
# 工程依赖清单（含中文注释）—— 推荐 Python 版本：3.11.x
# 说明：分阶段启用；“核心依赖”默认安装，其余为可选（按策略实现进度逐步解注）。
# ==============================================

# -------- 核心运行基座（步骤 0 → 1 必装） --------
Flask>=3.0                 # Web 框架 / REST API
Flask-Cors>=4.0            # 跨域支持（前后端分离）
Flask-SocketIO>=5.3        # 实时推送（盘中分时、事件）
eventlet>=0.33             # SocketIO 异步后端（与 Flask-SocketIO 搭配）
loguru>=0.7                # 结构化日志（审计、回放）
PyYAML>=6.0                # 读取 thresholds.yaml / 配置
pandas>=2.0                # 时间序列&行情数据处理（策略的基石）
numpy>=1.24                # 数值计算

# （可选）命令行接口 / 多进程消息队列（规模化时启用）
# click>=8.1               # CLI 命令组织（如脚本一键运行）
# redis>=5.0               # SocketIO 跨进程消息队列 & 缓存（生产部署建议启用）

# -------- 宏观过滤 & 板块轮动（步骤 1 → 2） --------
# requests>=2.31           # 外部数据抓取（VIX、ETF 申赎、北向等）
# scipy>=1.11              # 相关性、统计检验（可用于轮动/强弱逻辑）

# -------- 龙头识别与二线筛选（步骤 3 → 4） --------
# pandas-ta>=0.3           # 技术指标集合（建议优先；无需TA-Lib编译）
# ta>=0.10                 # 另一套指标库（二选一即可）
# scikit-learn>=1.3        # RS/标准化/简单建模（可选）

# -------- 买点与分时硬校验（步骤 5） --------
# websockets>=11.0         # 若接第三方分时流（非必须；视数据商SDK而定）
# numba>=0.59              # 可选加速（大样本分时/回放时有用）

# -------- 三闸门净期望与风控（步骤 6 → 7） --------
# statsmodels>=0.14        # 胜率估计/分布拟合（可选）

# -------- 卖出剧本 / 报表（步骤 8 → 10） --------
# jinja2>=3.1              # 文本化“卖出剧本”与日报模板（可选）

# -------- 数据接入与存储（步骤 11） --------
# akshare>=1.16.72         # A股数据接口（可选；按需接入再启用）
# tushare>=1.2             # 另一数据源（需自行申请 token）
# pyarrow>=14              # Parquet 存取（高效本地数据湖）
# diskcache>=5.6           # 轻量磁盘缓存（避免频繁拉取）
# SQLAlchemy>=2.0          # ORM/数据库抽象（如后续做持久化）
# pymysql>=1.1             # MySQL 驱动（若用 MySQL）
# psycopg2-binary>=2.9     # PostgreSQL 驱动（若用 PostgreSQL）

# -------- 回测与优化（步骤 13） --------
# optuna>=3.5              # 超参搜索（如阈值网格/贝叶斯）

# -------- 生产部署（步骤 15，可选） --------
# gunicorn>=21.2           # 部署用 WSGI 服务器（可配 --worker-class eventlet）
# gevent>=23.9.0           # gevent 异步栈（与 eventlet 二选一）
# gevent-websocket>=0.10.1 # gevent 的 websocket 支持
# prometheus_client>=0.20  # 监控指标导出

# ==============================================
# 使用建议：
# 1) 最小可跑仅需“核心运行基座”8 个包；其余按步骤实现逐条解注安装。
# 2) 避免直接启用 TA-Lib 源码编译；如需指标，优先 pandas-ta/ta。
# 3) 若需要跨进程/多实例扩缩容，请启用 redis 并在 Flask-SocketIO 配置 message_queue。
# 4) Python 版本建议 3.11.x（与现有脚本、并发/网络依赖兼容性最佳）。
# ==============================================
